name: Spore Release Matrix

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Release name (optional)'
        required: false
        type: string

jobs:
  build-release:
    strategy:
      matrix:
        os: [ubuntu-24.04, macos-14, windows-2022]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine working directory
        id: workdir
        run: |
          if [ -d bore-erlang ]; then
            echo "WORKDIR=bore-erlang" >> $GITHUB_ENV
          else
            echo "WORKDIR=." >> $GITHUB_ENV
          fi
          echo "Using WORKDIR=$WORKDIR"
        shell: bash

      - name: Setup Elixir/OTP
        uses: erlef/setup-beam@v1
        with:
          otp-version: '26'
          elixir-version: '1.16'

      - name: Install deps
        working-directory: ${{ env.WORKDIR }}
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get

      - name: Compile (prod)
        working-directory: ${{ env.WORKDIR }}
        run: MIX_ENV=prod mix compile

      - name: Build release
        working-directory: ${{ env.WORKDIR }}
        run: MIX_ENV=prod mix release

      - name: Verify release path (Unix)
        if: runner.os != 'Windows'
        working-directory: ${{ env.WORKDIR }}
        run: |
          ls -la _build/prod/rel
          test -d _build/prod/rel/spore

      - name: Verify release path (Windows)
        if: runner.os == 'Windows'
        working-directory: ${{ env.WORKDIR }}
        shell: pwsh
        run: |
          Get-ChildItem -Path _build/prod/rel
          If (-Not (Test-Path _build/prod/rel/spore)) { throw "release folder missing" }

      - name: Archive release (Unix)
        if: runner.os != 'Windows'
        working-directory: ${{ env.WORKDIR }}/_build/prod/rel
        run: |
          tar czf spore-${{ runner.os }}.tar.gz spore

      - name: Archive release (Windows)
        if: runner.os == 'Windows'
        working-directory: ${{ env.WORKDIR }}/_build/prod/rel
        shell: pwsh
        run: |
          Compress-Archive -Path spore -DestinationPath spore-Windows.zip -Force

      - name: Upload artifact (Unix)
        if: runner.os != 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: spore-${{ runner.os }}-release
          path: ${{ env.WORKDIR }}/_build/prod/rel/spore-${{ runner.os }}.tar.gz
          if-no-files-found: error

      - name: Upload artifact (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: spore-${{ runner.os }}-release
          path: ${{ env.WORKDIR }}/_build/prod/rel/spore-Windows.zip
          if-no-files-found: error

