name: Spore E2E Interop

on:
  workflow_dispatch: {}

jobs:
  interop-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine working directory
        id: workdir
        run: |
          if [ -d bore-erlang ]; then
            echo "WORKDIR=bore-erlang" >> $GITHUB_ENV
          else
            echo "WORKDIR=." >> $GITHUB_ENV
          fi
          echo "Using WORKDIR=$WORKDIR"

      - name: Setup Elixir/OTP
        uses: erlef/setup-beam@v1
        with:
          otp-version: '26'
          elixir-version: '1.16'

      - name: Build Spore escript
        working-directory: ${{ env.WORKDIR }}
        run: |
          mix deps.get
          mix escript.build

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install bore-cli
        run: |
          cargo install bore-cli
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Start local HTTP server (backend)
        working-directory: ${{ env.WORKDIR }}
        run: |
          nohup python3 -m http.server 25565 >/tmp/http.log 2>&1 &
          sleep 1

      - name: Start Spore server
        working-directory: ${{ env.WORKDIR }}
        run: |
          nohup ./spore server --min-port 20000 --max-port 21000 --bind-addr 127.0.0.1 >/tmp/server.log 2>&1 &
          sleep 1

      - name: Start bore (Rust) client
        run: |
          nohup bore local 25565 --to 127.0.0.1 --port 0 >/tmp/bore-client.log 2>&1 &
          sleep 2
          echo "Bore client log:" && tail -n +1 /tmp/bore-client.log

      - name: Discover assigned remote port
        id: discover
        run: |
          PORT=$(grep -oE 'listening at 127.0.0.1:[0-9]+' /tmp/bore-client.log | tail -n1 | sed 's/.*://')
          if [ -z "$PORT" ]; then echo "Could not find assigned port"; exit 1; fi
          echo "REMOTE_PORT=$PORT" >> $GITHUB_ENV

      - name: Curl through the tunnel
        run: |
          echo "Curling 127.0.0.1:${REMOTE_PORT}/"
          curl -sSf -v 127.0.0.1:${REMOTE_PORT}/ >/tmp/curl.out
          test -s /tmp/curl.out

      - name: Show logs on failure
        if: failure()
        run: |
          echo "=== server.log ==="; cat /tmp/server.log || true
          echo "=== bore-client.log ==="; cat /tmp/bore-client.log || true
          echo "=== http.log ==="; cat /tmp/http.log || true
          echo "=== curl.out ==="; cat /tmp/curl.out || true
